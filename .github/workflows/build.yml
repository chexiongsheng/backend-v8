name: build v8

on: 
  workflow_dispatch:
    inputs:
      tag_date:
        description: 'tag date'     
        required: true
      v8_revision:
        description: 'V8 TAG(Branch) to build'
        type: choice
        options:
        - "8.4.371.19"
        - "9.4.146.24"
        - "10.6.194"
        default: '9.4.146.24'
        required: true
      build_android:
        description: 'Build for Android platform'
        type: boolean
        default: true
        required: false
      build_ohos:
        description: 'Build for OHOS platform'
        type: boolean
        default: true
        required: false
      build_ios:
        description: 'Build for iOS platform'
        type: boolean
        default: true
        required: false
      build_windows:
        description: 'Build for Windows platform'
        type: boolean
        default: true
        required: false
      build_macos:
        description: 'Build for MacOS platform'
        type: boolean
        default: true
        required: false
      build_linux:
        description: 'Build for Linux platform'
        type: boolean
        default: true
        required: false
      do_publish:
        description: 'Publish a release'
        type: boolean
        default: true
        required: false
  

jobs:
  build_android_arm_v8:
    if: github.event.inputs.build_android == 'true'
    name: Android (arm64-v8a)
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Run build script
      run: |
        mkdir -p ~/v8/v8/output/v8_${{github.event.inputs.v8_revision}}
        touch ~/v8/v8/output/v8_${{github.event.inputs.v8_revision}}/aabbcc.txt
    - uses: actions/upload-artifact@v2
      with:
        name: v8_bin
        path: ~/v8/v8/output/**/*

  
        
  publish:
    if: github.event.inputs.do_publish == 'true'
    runs-on: ubuntu-20.04
    needs: [build_android_arm_v8]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: v8_bin
          path: v8_bin/
          
      - name: Create Release Asset
        run: |
          cd v8_bin/ && tar cvfz ../v8_bin_${{github.event.inputs.v8_revision}}.tgz v8_${{github.event.inputs.v8_revision}} && cd -
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: V8_${{github.event.inputs.v8_revision}}_${{ github.event.inputs.tag_date }}
          release_name: V8_${{github.event.inputs.v8_revision}}_${{ github.event.inputs.tag_date }}
          draft: false
          prerelease: false
          
      - name: Upload V8
        #id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./v8_bin_${{github.event.inputs.v8_revision}}.tgz
          asset_name: v8_bin_${{github.event.inputs.v8_revision}}.tgz
          asset_content_type: application/tgz
          



  